// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorldLeaders.Infrastructure.Data;

#nullable disable

namespace WorldLeaders.Infrastructure.Migrations
{
    [DbContext(typeof(WorldLeadersDbContext))]
    [Migration("20250803084630_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WorldLeaders.Infrastructure.Entities.AIInteractionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AgentResponse")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasComment("AI agent response (age-appropriate and educational)");

                    b.Property<string>("AgentType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Type of AI agent for educational personalization");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Interaction timestamp for session tracking");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to player for personalized learning");

                    b.Property<string>("PlayerInput")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasComment("Child's input to AI agent (content moderated)");

                    b.Property<bool>("WasHelpful")
                        .HasColumnType("boolean")
                        .HasComment("Whether child found the AI interaction helpful");

                    b.HasKey("Id");

                    b.HasIndex("AgentType")
                        .HasDatabaseName("IX_AIInteractions_AgentType");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_AIInteractions_CreatedAt");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("IX_AIInteractions_PlayerId");

                    b.HasIndex("PlayerId", "AgentType")
                        .HasDatabaseName("IX_AIInteractions_Player_Agent");

                    b.ToTable("AIInteractions", (string)null);
                });

            modelBuilder.Entity("WorldLeaders.Infrastructure.Entities.GameEventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Event creation timestamp");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasComment("Educational event description for 12-year-olds");

                    b.Property<int>("HappinessEffect")
                        .HasColumnType("integer")
                        .HasComment("Population happiness change from event");

                    b.Property<string>("IconEmoji")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValue("🎲")
                        .HasComment("Child-friendly emoji for visual representation");

                    b.Property<int>("IncomeEffect")
                        .HasColumnType("integer")
                        .HasComment("Income change from event (positive or negative)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasComment("Soft delete flag for content management");

                    b.Property<bool>("IsPositive")
                        .HasColumnType("boolean")
                        .HasComment("Whether event is generally positive for learning");

                    b.Property<int>("ReputationEffect")
                        .HasColumnType("integer")
                        .HasComment("Reputation change from event");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasComment("Child-friendly event title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Event category for educational learning");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_GameEvents_IsDeleted");

                    b.HasIndex("IsPositive")
                        .HasDatabaseName("IX_GameEvents_IsPositive");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_GameEvents_Type");

                    b.ToTable("GameEvents", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f2e185b-df7d-4376-bf03-627f00402e24"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3917),
                            Description = "Your hard work has been noticed by your supervisor. Great job!",
                            HappinessEffect = 10,
                            IconEmoji = "⭐",
                            IncomeEffect = 500,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 5,
                            Title = "Excellent Work Performance!",
                            Type = "Career"
                        },
                        new
                        {
                            Id = new Guid("1e6743ae-dc51-43cb-b113-1769e41ad39a"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3935),
                            Description = "You received an award for helping your community. People appreciate your kindness!",
                            HappinessEffect = 15,
                            IconEmoji = "🏆",
                            IncomeEffect = 200,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 10,
                            Title = "Community Award",
                            Type = "Social"
                        },
                        new
                        {
                            Id = new Guid("9c643b80-54a1-409a-9d14-b0112f8fe34a"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3948),
                            Description = "You learned a valuable new skill that makes you better at your job!",
                            HappinessEffect = 8,
                            IconEmoji = "📚",
                            IncomeEffect = 300,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 3,
                            Title = "New Skill Learned",
                            Type = "Career"
                        },
                        new
                        {
                            Id = new Guid("ce61ebfd-511c-4e12-a43c-e3ffee4066df"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3962),
                            Description = "The economy is doing well, and your investments are growing!",
                            HappinessEffect = 5,
                            IconEmoji = "📈",
                            IncomeEffect = 800,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 5,
                            Title = "Market Success",
                            Type = "Economic"
                        },
                        new
                        {
                            Id = new Guid("94d175a5-a253-486c-9259-3fd36f27e302"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3975),
                            Description = "A new trade agreement brings prosperity to your region!",
                            HappinessEffect = 12,
                            IconEmoji = "🤝",
                            IncomeEffect = 600,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 8,
                            Title = "International Trade Deal",
                            Type = "International"
                        },
                        new
                        {
                            Id = new Guid("cf869488-7c06-4f29-b987-555a8f114e2e"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3990),
                            Description = "Economic conditions are tough, but this is a chance to learn resilience!",
                            HappinessEffect = -5,
                            IconEmoji = "📉",
                            IncomeEffect = -300,
                            IsDeleted = false,
                            IsPositive = false,
                            ReputationEffect = -2,
                            Title = "Economic Challenge",
                            Type = "Economic"
                        },
                        new
                        {
                            Id = new Guid("6e357db6-9fde-4723-8f5f-50f1a0b539e8"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(4003),
                            Description = "Unexpected weather affects crops, teaching us about nature's impact on economy.",
                            HappinessEffect = -3,
                            IconEmoji = "🌧️",
                            IncomeEffect = -200,
                            IsDeleted = false,
                            IsPositive = false,
                            ReputationEffect = 0,
                            Title = "Natural Weather Event",
                            Type = "Natural"
                        },
                        new
                        {
                            Id = new Guid("ceae6747-54b5-48fe-9869-1fdcf9e33ffb"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(4017),
                            Description = "A difficult situation becomes a chance to grow and learn new skills!",
                            HappinessEffect = 5,
                            IconEmoji = "🎓",
                            IncomeEffect = -100,
                            IsDeleted = false,
                            IsPositive = false,
                            ReputationEffect = 2,
                            Title = "Learning Opportunity",
                            Type = "Career"
                        },
                        new
                        {
                            Id = new Guid("b5c86b88-6b5b-4172-bd4f-63bd2cef1470"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(4031),
                            Description = "Your neighborhood organizes a wonderful festival that brings everyone together!",
                            HappinessEffect = 20,
                            IconEmoji = "🎉",
                            IncomeEffect = 100,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 3,
                            Title = "Community Festival",
                            Type = "Social"
                        },
                        new
                        {
                            Id = new Guid("4ee362ea-653d-4601-8a7d-1ef1c88cff94"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(4045),
                            Description = "You helped someone in need, and it made everyone feel good!",
                            HappinessEffect = 15,
                            IconEmoji = "❤️",
                            IncomeEffect = 0,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 5,
                            Title = "Helping Others",
                            Type = "Social"
                        },
                        new
                        {
                            Id = new Guid("66cbaabd-f15d-4285-848b-9f607e1070d1"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(4059),
                            Description = "You learned about a different culture and made new friends!",
                            HappinessEffect = 10,
                            IconEmoji = "🌍",
                            IncomeEffect = 150,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 7,
                            Title = "Cultural Exchange",
                            Type = "International"
                        },
                        new
                        {
                            Id = new Guid("370ef5cb-5c7f-43e6-a764-1dd75389de09"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(4072),
                            Description = "Nature provided an excellent harvest this year. Farmers are happy!",
                            HappinessEffect = 8,
                            IconEmoji = "🌾",
                            IncomeEffect = 400,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 2,
                            Title = "Beautiful Harvest",
                            Type = "Natural"
                        },
                        new
                        {
                            Id = new Guid("b9ebc9c7-0b35-46ba-820d-f471ab6d080f"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(4086),
                            Description = "Scientists in your region made an amazing discovery that helps everyone!",
                            HappinessEffect = 12,
                            IconEmoji = "🔬",
                            IncomeEffect = 300,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 8,
                            Title = "Scientific Discovery",
                            Type = "Career"
                        },
                        new
                        {
                            Id = new Guid("8401757b-15f4-4ad1-ba7d-7337c10aa683"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(4099),
                            Description = "Your kind actions inspired others to be kind too!",
                            HappinessEffect = 25,
                            IconEmoji = "😊",
                            IncomeEffect = 50,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 8,
                            Title = "Acts of Kindness",
                            Type = "Social"
                        },
                        new
                        {
                            Id = new Guid("65b8cd69-9d60-4995-8016-69a9c4bb2790"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(4113),
                            Description = "You found a creative solution to a community problem!",
                            HappinessEffect = 15,
                            IconEmoji = "💡",
                            IncomeEffect = 200,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 10,
                            Title = "Problem Solving",
                            Type = "Social"
                        },
                        new
                        {
                            Id = new Guid("68113cac-1c4c-4e12-8a56-a46eafdc8553"),
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(4126),
                            Description = "Your efforts to protect the environment are appreciated by everyone!",
                            HappinessEffect = 18,
                            IconEmoji = "🌱",
                            IncomeEffect = 150,
                            IsDeleted = false,
                            IsPositive = true,
                            ReputationEffect = 5,
                            Title = "Environmental Care",
                            Type = "Natural"
                        });
                });

            modelBuilder.Entity("WorldLeaders.Infrastructure.Entities.LanguageProgressEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccuracyPercentage")
                        .HasColumnType("integer")
                        .HasComment("Speech recognition accuracy (0-100%) for progress tracking");

                    b.Property<int>("ChallengesCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasComment("Number of pronunciation challenges completed");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Language learning start timestamp");

                    b.Property<bool>("HasPassed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasComment("Whether child achieved 70%+ accuracy requirement");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasComment("ISO 639-1 language code for territory languages");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasComment("Human-readable language name for child UI");

                    b.Property<DateTime>("LastPracticeAt")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Last practice session timestamp");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid")
                        .HasComment("Reference to player for personalized learning progress");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Last progress update timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AccuracyPercentage")
                        .HasDatabaseName("IX_LanguageProgress_AccuracyPercentage");

                    b.HasIndex("HasPassed")
                        .HasDatabaseName("IX_LanguageProgress_HasPassed");

                    b.HasIndex("LanguageCode")
                        .HasDatabaseName("IX_LanguageProgress_LanguageCode");

                    b.HasIndex("LastPracticeAt")
                        .HasDatabaseName("IX_LanguageProgress_LastPracticeAt");

                    b.HasIndex("PlayerId", "LanguageCode")
                        .IsUnique()
                        .HasDatabaseName("IX_LanguageProgress_Player_Language");

                    b.ToTable("LanguageProgress", (string)null);
                });

            modelBuilder.Entity("WorldLeaders.Infrastructure.Entities.PlayerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Account creation timestamp");

                    b.Property<string>("CurrentGameState")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("NotStarted")
                        .HasComment("Current state of the educational game session");

                    b.Property<string>("CurrentJob")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Farmer")
                        .HasComment("Current job level from dice roll progression");

                    b.Property<DateTime>("GameStartedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("When the child started playing the game");

                    b.Property<int>("Happiness")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(50)
                        .HasComment("Population happiness meter (0-100) - game over at 0");

                    b.Property<int>("Income")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1000)
                        .HasComment("Monthly income from job and territories");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasComment("Soft delete flag for child data protection");

                    b.Property<DateTime>("LastActiveAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Last activity timestamp for session management");

                    b.Property<int>("Reputation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasComment("Reputation percentage (0-100) for territory acquisition");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Last update timestamp - auto-updated on save");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasComment("Child-friendly username for educational game");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Players_IsDeleted");

                    b.HasIndex("LastActiveAt")
                        .HasDatabaseName("IX_Players_LastActiveAt");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("IX_Players_Username");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("WorldLeaders.Infrastructure.Entities.TerritoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AcquiredAt")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("When territory was acquired by current owner");

                    b.Property<int>("Cost")
                        .HasColumnType("integer")
                        .HasComment("Purchase cost in game currency");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasComment("ISO 3166-1 alpha-2 country code");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasComment("Official country name for geography education");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Territory record creation timestamp");

                    b.Property<int>("GDPRank")
                        .HasColumnType("integer")
                        .HasComment("World GDP ranking for educational context");

                    b.Property<decimal>("GdpInBillions")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("GDP in billions USD for economics education");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasComment("Whether territory is available for purchase");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasComment("Soft delete flag for data protection");

                    b.Property<int>("MonthlyIncome")
                        .HasColumnType("integer")
                        .HasComment("Monthly income generated when owned");

                    b.Property<string>("OfficialLanguagesJson")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("OfficialLanguages")
                        .HasComment("JSON array of official languages for speech challenges");

                    b.Property<Guid?>("OwnedByPlayerId")
                        .HasColumnType("uuid")
                        .HasComment("Player ID who owns this territory (nullable)");

                    b.Property<long>("RealGDP")
                        .HasColumnType("bigint")
                        .HasComment("Real GDP in USD from World Bank data");

                    b.Property<int>("ReputationRequired")
                        .HasColumnType("integer")
                        .HasComment("Minimum reputation percentage (0-100) required");

                    b.Property<string>("Tier")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Small")
                        .HasComment("Territory difficulty tier based on GDP ranking");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Last update timestamp");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode")
                        .IsUnique()
                        .HasDatabaseName("IX_Territories_CountryCode");

                    b.HasIndex("GDPRank")
                        .HasDatabaseName("IX_Territories_GDPRank");

                    b.HasIndex("IsAvailable")
                        .HasDatabaseName("IX_Territories_IsAvailable");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Territories_IsDeleted");

                    b.HasIndex("OwnedByPlayerId")
                        .HasDatabaseName("IX_Territories_OwnedByPlayerId");

                    b.HasIndex("Tier")
                        .HasDatabaseName("IX_Territories_Tier");

                    b.ToTable("Territories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1eaef1a6-3ef9-46a7-a242-6ab0f24375c6"),
                            Cost = 5000,
                            CountryCode = "NP",
                            CountryName = "Nepal",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3026),
                            GDPRank = 100,
                            GdpInBillions = 36.29m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 500,
                            OfficialLanguagesJson = "[\"ne\",\"en\"]",
                            RealGDP = 36290000000L,
                            ReputationRequired = 10,
                            Tier = "Small",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3027)
                        },
                        new
                        {
                            Id = new Guid("eabe7dc9-c314-4ca2-a17b-0527f4223a4c"),
                            Cost = 8000,
                            CountryCode = "IS",
                            CountryName = "Iceland",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3058),
                            GDPRank = 95,
                            GdpInBillions = 27.84m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 800,
                            OfficialLanguagesJson = "[\"is\",\"en\"]",
                            RealGDP = 27840000000L,
                            ReputationRequired = 15,
                            Tier = "Small",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3058)
                        },
                        new
                        {
                            Id = new Guid("a7e90b4a-3845-4773-bf80-38a5cea7c2ff"),
                            Cost = 6000,
                            CountryCode = "EE",
                            CountryName = "Estonia",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3081),
                            GDPRank = 98,
                            GdpInBillions = 38.03m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 600,
                            OfficialLanguagesJson = "[\"et\",\"en\"]",
                            RealGDP = 38030000000L,
                            ReputationRequired = 12,
                            Tier = "Small",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3081)
                        },
                        new
                        {
                            Id = new Guid("03c974ee-a950-4441-9be2-e9288a4454d0"),
                            Cost = 12000,
                            CountryCode = "LU",
                            CountryName = "Luxembourg",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3106),
                            GDPRank = 90,
                            GdpInBillions = 86.93m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 1200,
                            OfficialLanguagesJson = "[\"lb\",\"fr\",\"de\"]",
                            RealGDP = 86930000000L,
                            ReputationRequired = 20,
                            Tier = "Small",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3106)
                        },
                        new
                        {
                            Id = new Guid("2badf0a2-d3ad-4268-af13-3b1e880950fd"),
                            Cost = 4500,
                            CountryCode = "MT",
                            CountryName = "Malta",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3128),
                            GDPRank = 105,
                            GdpInBillions = 17.32m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 450,
                            OfficialLanguagesJson = "[\"mt\",\"en\"]",
                            RealGDP = 17320000000L,
                            ReputationRequired = 8,
                            Tier = "Small",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3128)
                        },
                        new
                        {
                            Id = new Guid("7da5085d-ca67-4b3b-8f11-7d076ac1e6c1"),
                            Cost = 5500,
                            CountryCode = "CY",
                            CountryName = "Cyprus",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3154),
                            GDPRank = 102,
                            GdpInBillions = 27.97m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 550,
                            OfficialLanguagesJson = "[\"el\",\"tr\",\"en\"]",
                            RealGDP = 27970000000L,
                            ReputationRequired = 10,
                            Tier = "Small",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3154)
                        },
                        new
                        {
                            Id = new Guid("8b3f5295-31cc-4aa5-b423-b7c2e569392b"),
                            Cost = 7000,
                            CountryCode = "BN",
                            CountryName = "Brunei",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3176),
                            GDPRank = 110,
                            GdpInBillions = 16.84m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 700,
                            OfficialLanguagesJson = "[\"ms\",\"en\"]",
                            RealGDP = 16840000000L,
                            ReputationRequired = 15,
                            Tier = "Small",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3176)
                        },
                        new
                        {
                            Id = new Guid("bff7d1e4-b78b-499c-9d38-f2edf20b56e6"),
                            Cost = 4000,
                            CountryCode = "JM",
                            CountryName = "Jamaica",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3198),
                            GDPRank = 108,
                            GdpInBillions = 17.94m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 400,
                            OfficialLanguagesJson = "[\"en\"]",
                            RealGDP = 17940000000L,
                            ReputationRequired = 8,
                            Tier = "Small",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3199)
                        },
                        new
                        {
                            Id = new Guid("e59c481d-7120-48c3-ade4-ee452f984e73"),
                            Cost = 25000,
                            CountryCode = "PT",
                            CountryName = "Portugal",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3220),
                            GDPRank = 60,
                            GdpInBillions = 249.89m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 2500,
                            OfficialLanguagesJson = "[\"pt\"]",
                            RealGDP = 249890000000L,
                            ReputationRequired = 30,
                            Tier = "Medium",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3220)
                        },
                        new
                        {
                            Id = new Guid("d049560e-d1a7-4757-8fc3-19eb548fd4de"),
                            Cost = 28000,
                            CountryCode = "NZ",
                            CountryName = "New Zealand",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3243),
                            GDPRank = 55,
                            GdpInBillions = 249.89m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 2800,
                            OfficialLanguagesJson = "[\"en\",\"mi\"]",
                            RealGDP = 249890000000L,
                            ReputationRequired = 35,
                            Tier = "Medium",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3244)
                        },
                        new
                        {
                            Id = new Guid("56b32c21-57e3-491d-a578-efca4a5403b8"),
                            Cost = 35000,
                            CountryCode = "IE",
                            CountryName = "Ireland",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3265),
                            GDPRank = 45,
                            GdpInBillions = 498.57m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 3500,
                            OfficialLanguagesJson = "[\"en\",\"ga\"]",
                            RealGDP = 498570000000L,
                            ReputationRequired = 40,
                            Tier = "Medium",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3265)
                        },
                        new
                        {
                            Id = new Guid("3dcd6c10-28b5-4b9a-b4ad-b97b43bc19f2"),
                            Cost = 32000,
                            CountryCode = "DK",
                            CountryName = "Denmark",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3287),
                            GDPRank = 50,
                            GdpInBillions = 398.30m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 3200,
                            OfficialLanguagesJson = "[\"da\"]",
                            RealGDP = 398300000000L,
                            ReputationRequired = 38,
                            Tier = "Medium",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3287)
                        },
                        new
                        {
                            Id = new Guid("60a23063-a590-404e-a05a-b2ceb2a48d22"),
                            Cost = 30000,
                            CountryCode = "FI",
                            CountryName = "Finland",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3308),
                            GDPRank = 52,
                            GdpInBillions = 297.30m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 3000,
                            OfficialLanguagesJson = "[\"fi\",\"sv\"]",
                            RealGDP = 297300000000L,
                            ReputationRequired = 35,
                            Tier = "Medium",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3308)
                        },
                        new
                        {
                            Id = new Guid("c6e38104-f119-47ee-9595-e3bb933e5143"),
                            Cost = 38000,
                            CountryCode = "NO",
                            CountryName = "Norway",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3329),
                            GDPRank = 43,
                            GdpInBillions = 482.17m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 3800,
                            OfficialLanguagesJson = "[\"no\"]",
                            RealGDP = 482170000000L,
                            ReputationRequired = 42,
                            Tier = "Medium",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3329)
                        },
                        new
                        {
                            Id = new Guid("af864865-0106-4d8d-8809-072439b4fcd5"),
                            Cost = 40000,
                            CountryCode = "SG",
                            CountryName = "Singapore",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3353),
                            GDPRank = 42,
                            GdpInBillions = 397.72m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 4000,
                            OfficialLanguagesJson = "[\"en\",\"ms\",\"ta\",\"zh\"]",
                            RealGDP = 397720000000L,
                            ReputationRequired = 45,
                            Tier = "Medium",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3354)
                        },
                        new
                        {
                            Id = new Guid("1a4cd16a-47c2-43cd-8ad7-6445d50536fe"),
                            Cost = 36000,
                            CountryCode = "IL",
                            CountryName = "Israel",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3376),
                            GDPRank = 46,
                            GdpInBillions = 481.66m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 3600,
                            OfficialLanguagesJson = "[\"he\",\"ar\",\"en\"]",
                            RealGDP = 481660000000L,
                            ReputationRequired = 40,
                            Tier = "Medium",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3376)
                        },
                        new
                        {
                            Id = new Guid("49e0adb2-6b3d-4880-b2fd-1e05c8924f1e"),
                            Cost = 35000,
                            CountryCode = "AT",
                            CountryName = "Austria",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3397),
                            GDPRank = 47,
                            GdpInBillions = 477.04m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 3500,
                            OfficialLanguagesJson = "[\"de\"]",
                            RealGDP = 477040000000L,
                            ReputationRequired = 38,
                            Tier = "Medium",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3398)
                        },
                        new
                        {
                            Id = new Guid("1db0c6c4-5218-40a9-ab50-1647c9778ff4"),
                            Cost = 42000,
                            CountryCode = "BE",
                            CountryName = "Belgium",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3421),
                            GDPRank = 40,
                            GdpInBillions = 594.41m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 4200,
                            OfficialLanguagesJson = "[\"nl\",\"fr\",\"de\"]",
                            RealGDP = 594410000000L,
                            ReputationRequired = 45,
                            Tier = "Medium",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3421)
                        },
                        new
                        {
                            Id = new Guid("2cc72d7d-7bc6-4feb-9387-8d77be6b117a"),
                            Cost = 65000,
                            CountryCode = "NL",
                            CountryName = "Netherlands",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3443),
                            GDPRank = 25,
                            GdpInBillions = 1.01m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 6500,
                            OfficialLanguagesJson = "[\"nl\"]",
                            RealGDP = 1010000000L,
                            ReputationRequired = 60,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3443)
                        },
                        new
                        {
                            Id = new Guid("0be64112-5ee7-4425-8cc5-6888e0f45eaf"),
                            Cost = 70000,
                            CountryCode = "CH",
                            CountryName = "Switzerland",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3465),
                            GDPRank = 22,
                            GdpInBillions = 807.71m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 7000,
                            OfficialLanguagesJson = "[\"de\",\"fr\",\"it\",\"rm\"]",
                            RealGDP = 807710000000L,
                            ReputationRequired = 65,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3466)
                        },
                        new
                        {
                            Id = new Guid("4b6c1442-c18e-4ffd-bdc2-1a3e38a6229a"),
                            Cost = 55000,
                            CountryCode = "SE",
                            CountryName = "Sweden",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3486),
                            GDPRank = 28,
                            GdpInBillions = 635.66m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 5500,
                            OfficialLanguagesJson = "[\"sv\"]",
                            RealGDP = 635660000000L,
                            ReputationRequired = 55,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3486)
                        },
                        new
                        {
                            Id = new Guid("feec3004-7207-4383-a5f7-392588cad7e3"),
                            Cost = 80000,
                            CountryCode = "AU",
                            CountryName = "Australia",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3507),
                            GDPRank = 15,
                            GdpInBillions = 1.55m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 8000,
                            OfficialLanguagesJson = "[\"en\"]",
                            RealGDP = 1550000000L,
                            ReputationRequired = 70,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3507)
                        },
                        new
                        {
                            Id = new Guid("2d2e0de5-ebd3-448f-9a7c-383ddff8876b"),
                            Cost = 85000,
                            CountryCode = "CA",
                            CountryName = "Canada",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3529),
                            GDPRank = 12,
                            GdpInBillions = 2.14m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 8500,
                            OfficialLanguagesJson = "[\"en\",\"fr\"]",
                            RealGDP = 2140000000L,
                            ReputationRequired = 75,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3529)
                        },
                        new
                        {
                            Id = new Guid("c3e5171a-72c7-4b88-85d1-c4ad909779a4"),
                            Cost = 75000,
                            CountryCode = "KR",
                            CountryName = "South Korea",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3549),
                            GDPRank = 18,
                            GdpInBillions = 1.81m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 7500,
                            OfficialLanguagesJson = "[\"ko\"]",
                            RealGDP = 1810000000L,
                            ReputationRequired = 68,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3549)
                        },
                        new
                        {
                            Id = new Guid("7508b585-e10f-4d44-bbf9-9b87f1974b94"),
                            Cost = 72000,
                            CountryCode = "ES",
                            CountryName = "Spain",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3635),
                            GDPRank = 20,
                            GdpInBillions = 1.40m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 7200,
                            OfficialLanguagesJson = "[\"es\",\"ca\",\"gl\",\"eu\"]",
                            RealGDP = 1400000000L,
                            ReputationRequired = 65,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3635)
                        },
                        new
                        {
                            Id = new Guid("2249758a-54de-4bef-b62d-edf9503f9645"),
                            Cost = 78000,
                            CountryCode = "IT",
                            CountryName = "Italy",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3658),
                            GDPRank = 16,
                            GdpInBillions = 2.11m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 7800,
                            OfficialLanguagesJson = "[\"it\"]",
                            RealGDP = 2110000000L,
                            ReputationRequired = 70,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3658)
                        },
                        new
                        {
                            Id = new Guid("2c77d3b4-3def-43f2-b8dc-50c2d1cd8956"),
                            Cost = 90000,
                            CountryCode = "FR",
                            CountryName = "France",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3678),
                            GDPRank = 8,
                            GdpInBillions = 2.94m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 9000,
                            OfficialLanguagesJson = "[\"fr\"]",
                            RealGDP = 2940000000L,
                            ReputationRequired = 80,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3679)
                        },
                        new
                        {
                            Id = new Guid("12737342-fe23-45ed-ab35-0a5fa51cc8d3"),
                            Cost = 95000,
                            CountryCode = "GB",
                            CountryName = "United Kingdom",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3701),
                            GDPRank = 6,
                            GdpInBillions = 3.13m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 9500,
                            OfficialLanguagesJson = "[\"en\",\"cy\",\"gd\"]",
                            RealGDP = 3130000000L,
                            ReputationRequired = 82,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3702)
                        },
                        new
                        {
                            Id = new Guid("fce3d21d-72b8-49df-a9de-839ed58a8013"),
                            Cost = 100000,
                            CountryCode = "DE",
                            CountryName = "Germany",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3722),
                            GDPRank = 4,
                            GdpInBillions = 4.26m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 10000,
                            OfficialLanguagesJson = "[\"de\"]",
                            RealGDP = 4260000000L,
                            ReputationRequired = 85,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3722)
                        },
                        new
                        {
                            Id = new Guid("c15b7344-f64c-49de-aefa-3dd8d1d99043"),
                            Cost = 110000,
                            CountryCode = "JP",
                            CountryName = "Japan",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3743),
                            GDPRank = 3,
                            GdpInBillions = 4.94m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 11000,
                            OfficialLanguagesJson = "[\"ja\"]",
                            RealGDP = 4940000000L,
                            ReputationRequired = 88,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3744)
                        },
                        new
                        {
                            Id = new Guid("0ceea510-85da-4e6f-998d-35087c9cea0e"),
                            Cost = 150000,
                            CountryCode = "CN",
                            CountryName = "China",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3764),
                            GDPRank = 2,
                            GdpInBillions = 17.73m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 15000,
                            OfficialLanguagesJson = "[\"zh\"]",
                            RealGDP = 17730000000L,
                            ReputationRequired = 92,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3764)
                        },
                        new
                        {
                            Id = new Guid("ad85259f-5857-4ef2-aeb5-057b5c8f5fad"),
                            Cost = 200000,
                            CountryCode = "US",
                            CountryName = "United States",
                            CreatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3786),
                            GDPRank = 1,
                            GdpInBillions = 26.95m,
                            IsAvailable = true,
                            IsDeleted = false,
                            MonthlyIncome = 20000,
                            OfficialLanguagesJson = "[\"en\",\"es\"]",
                            RealGDP = 26950000000L,
                            ReputationRequired = 95,
                            Tier = "Major",
                            UpdatedAt = new DateTime(2025, 8, 3, 8, 46, 29, 827, DateTimeKind.Utc).AddTicks(3786)
                        });
                });

            modelBuilder.Entity("WorldLeaders.Infrastructure.Entities.AIInteractionEntity", b =>
                {
                    b.HasOne("WorldLeaders.Infrastructure.Entities.PlayerEntity", null)
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AIInteractions_Players_PlayerId");
                });

            modelBuilder.Entity("WorldLeaders.Infrastructure.Entities.LanguageProgressEntity", b =>
                {
                    b.HasOne("WorldLeaders.Infrastructure.Entities.PlayerEntity", null)
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LanguageProgress_Players_PlayerId");
                });

            modelBuilder.Entity("WorldLeaders.Infrastructure.Entities.TerritoryEntity", b =>
                {
                    b.HasOne("WorldLeaders.Infrastructure.Entities.PlayerEntity", null)
                        .WithMany()
                        .HasForeignKey("OwnedByPlayerId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Territories_Players_OwnedByPlayerId");
                });
#pragma warning restore 612, 618
        }
    }
}
