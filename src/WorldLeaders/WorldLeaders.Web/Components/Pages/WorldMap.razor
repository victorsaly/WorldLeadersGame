@page "/world-map"
@page "/map"
@page "/territories"
@*
Interactive World Map - Territory Management Game
Context: Core game page for 12-year-old geography learning through territory acquisition
Educational Objective: Learn world geography, economics, and strategy through interactive gameplay
Safety Requirements: Age-appropriate content and safe interaction patterns
Map Source: AdobeStock_380033452.svg - Professional quality world map (6000x3000px)
*@
@using WorldLeaders.Shared.Models
@using WorldLeaders.Shared.DTOs
@using WorldLeaders.Shared.Enums
@inject ILogger<WorldMap> Logger

<PageTitle>🗺️ World Map - Territory Management</PageTitle>

<div class="retro-game-container min-h-screen p-4">
    <div class="max-w-7xl mx-auto">
        <!-- Game Header -->
        <div class="text-center mb-6">
            <h1 class="retro-title text-3xl md:text-4xl mb-4">
                🗺️ World Territory Map
            </h1>
            <p class="retro-subtitle text-lg mb-2">
                Expand Your Global Influence
            </p>
            <p class="retro-body on-dark text-center max-w-2xl mx-auto mb-3">
                Build your global empire by acquiring territories around the world! Learn about different countries, their cultures, and economies as you strategically expand your influence.
            </p>
        </div>

        <!-- Player Status -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
            <div class="pixel-art-card green-theme text-center">
                <h3 class="font-bold text-lg mb-2">� Your Resources</h3>
                <div class="space-y-2">
                    <p><strong>Treasury:</strong> $@playerIncome.ToString("N0")</p>
                    <p><strong>Reputation:</strong> @playerReputation%</p>
                    <p><strong>Territories Owned:</strong> @playerTerritories.Count</p>
                </div>
            </div>
            
            <div class="pixel-art-card text-center">
                <h3 class="font-bold text-lg mb-2">🎯 Your Mission</h3>
                <div class="space-y-1 text-sm">
                    <p>🌍 Conquer the World</p>
                    <p>📚 Learn Geography</p>
                    <p>🏛️ Discover Cultures</p>
                    <p>💡 Build Strategy</p>
                </div>
            </div>
            
            <div class="pixel-art-card text-center">
                <h3 class="font-bold text-lg mb-2">🎮 Game Controls</h3>
                <div class="space-y-1 text-sm">
                    <p>🖱️ Click to select territories</p>
                    <p>� Purchase available countries</p>
                    <p>📱 Zoom and explore</p>
                    <p>📖 Learn country facts</p>
                </div>
            </div>
        </div>

        <!-- Interactive World Map Component -->
        <div class="mb-6">
            <PixelWorldMap PlayerId="@playerId"
                          PlayerTerritories="@playerTerritories"
                          AvailableTerritories="@availableTerritories"
                          OnTerritorySelected="OnTerritorySelected"
                          OnZoomChanged="OnZoomChanged"
                          IsMobile="@isMobile" 
                          @key="@playerId" />
        </div>

        <!-- Selected Territory Information -->
        @if (selectedTerritory != null)
        {
            <div class="pixel-art-card green-theme mb-6">
                <div class="flex items-start gap-4">
                    <div class="flex-shrink-0">
                        <img src="https://flagcdn.com/w80/@(selectedTerritory.CountryCode.ToLower()).png" 
                             alt="@selectedTerritory.CountryName flag" 
                             class="w-20 h-15 pixel-image border-2 border-black"/>
                    </div>
                    <div class="flex-grow">
                        <h3 class="text-2xl font-bold mb-2">📍 @selectedTerritory.CountryName</h3>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <p><strong>🏴 Country Code:</strong> @selectedTerritory.CountryCode</p>
                                <p><strong>💰 GDP:</strong> $@selectedTerritory.GdpInBillions B</p>
                                <p><strong>💸 Acquisition Cost:</strong> $@selectedTerritory.Cost.ToString("N0")</p>
                                <p><strong>💵 Monthly Income:</strong> $@selectedTerritory.MonthlyIncome.ToString("N0")</p>
                            </div>
                            <div>
                                <p><strong>⭐ Territory Tier:</strong> @selectedTerritory.Tier</p>
                                <p><strong>🎖️ Reputation Needed:</strong> @selectedTerritory.ReputationRequired%</p>
                                <p><strong>🗣️ Languages:</strong> @string.Join(", ", selectedTerritory.OfficialLanguages.Take(3))</p>
                                @if (selectedTerritory.IsOwned)
                                {
                                    <p><strong>📅 Acquired:</strong> Part of your empire!</p>
                                }
                            </div>
                        </div>
                        
                        @if (selectedTerritory.IsAvailable && !selectedTerritory.IsOwned)
                        {
                            <div class="mt-4">
                                <button @onclick="() => AcquireTerritory(selectedTerritory)" 
                                        class="pixel-art-button"
                                        disabled="@(!CanAffordTerritory(selectedTerritory))">
                                    @if (CanAffordTerritory(selectedTerritory))
                                    {
                                        <span>🏴 Acquire Territory - $@selectedTerritory.Cost.ToString("N0")</span>
                                    }
                                    else if (playerIncome < selectedTerritory.Cost)
                                    {
                                        <span>� Need $@((selectedTerritory.Cost - playerIncome).ToString("N0")) More</span>
                                    }
                                    else
                                    {
                                        <span>🎖️ Need @((selectedTerritory.ReputationRequired - playerReputation))% More Reputation</span>
                                    }
                                </button>
                            </div>
                        }
                        else if (selectedTerritory.IsOwned)
                        {
                            <div class="mt-4">
                                <span class="pixel-art-button" style="background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%); color: white; cursor: default;">
                                    ✅ Territory Under Your Control
                                </span>
                            </div>
                        }
                        else
                        {
                            <div class="mt-4">
                                <span class="pixel-art-button" style="opacity: 0.7; cursor: default;">
                                    🔒 Territory Not Available Yet
                                </span>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Game Strategy & Progress -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
            <div class="pixel-art-card">
                <h3 class="text-xl font-bold mb-4">� Strategic Tips</h3>
                <ul class="space-y-2 text-sm">
                    <li>💰 <strong>Start Small:</strong> Begin with affordable territories to build income</li>
                    <li>⭐ <strong>Build Reputation:</strong> Complete missions to unlock premium territories</li>
                    <li>🌍 <strong>Diversify:</strong> Spread across continents for balanced growth</li>
                    <li>📚 <strong>Learn & Earn:</strong> Each territory teaches you about the world</li>
                    <li>🏛️ <strong>Cultural Bonus:</strong> Discover unique facts about each country</li>
                    <li>💡 <strong>Economic Strategy:</strong> Higher GDP = Higher income potential</li>
                </ul>
            </div>
            
            <div class="pixel-art-card">
                <h3 class="text-xl font-bold mb-4">� Your Progress</h3>
                <div class="space-y-3">
                    <div>
                        <p class="font-bold">🌍 Global Influence</p>
                        <div class="w-full bg-gray-200 rounded-full h-4 border-2 border-black">
                            <div class="bg-gradient-to-r from-green-400 to-blue-500 h-full rounded-full transition-all duration-1000" 
                                 style="width: @(Math.Round((double)playerTerritories.Count / 200 * 100, 1))%"></div>
                        </div>
                        <p class="text-xs mt-1">@playerTerritories.Count of ~200 countries</p>
                    </div>
                    
                    <div>
                        <p class="font-bold">⭐ Reputation Level</p>
                        <div class="w-full bg-gray-200 rounded-full h-4 border-2 border-black">
                            <div class="bg-gradient-to-r from-yellow-400 to-orange-500 h-full rounded-full transition-all duration-1000" 
                                 style="width: @playerReputation%"></div>
                        </div>
                        <p class="text-xs mt-1">@playerReputation% reputation earned</p>
                    </div>
                    
                    <div>
                        <p class="font-bold">💰 Economic Power</p>
                        <p class="text-lg">Monthly Income: $@(playerTerritories.Sum(t => t.MonthlyIncome).ToString("N0"))</p>
                        <p class="text-sm text-gray-600">From @playerTerritories.Count territories</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Territory Statistics -->
        <div class="pixel-art-card mb-6">
            <h3 class="text-xl font-bold mb-4">🏛️ Territory Overview</h3>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                    <h4 class="font-bold text-green-700 mb-2">✅ Your Territories (@playerTerritories.Count)</h4>
                    <div class="space-y-1 text-sm max-h-32 overflow-y-auto">
                        @if (playerTerritories.Any())
                        {
                            @foreach (var territory in playerTerritories.OrderBy(t => t.CountryName))
                            {
                                <div class="flex justify-between items-center">
                                    <span>🏴 @territory.CountryName</span>
                                    <span class="text-green-600">+$@territory.MonthlyIncome.ToString("N0")</span>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-gray-500 italic">No territories yet - start your conquest!</p>
                        }
                    </div>
                </div>
                <div>
                    <h4 class="font-bold text-blue-600 mb-2">🌍 Available Territories (@availableTerritories.Count(t => t.IsAvailable))</h4>
                    <div class="space-y-1 text-sm max-h-32 overflow-y-auto">
                        @foreach (var territory in availableTerritories.Where(t => t.IsAvailable && CanAffordTerritory(t)).OrderBy(t => t.Cost).Take(5))
                        {
                            <div class="flex justify-between items-center">
                                <span>🎯 @territory.CountryName</span>
                                <span class="text-blue-600">$@territory.Cost.ToString("N0")</span>
                            </div>
                        }
                        @if (availableTerritories.Count(t => t.IsAvailable && CanAffordTerritory(t)) > 5)
                        {
                            <p class="text-xs text-gray-500">+ @(availableTerritories.Count(t => t.IsAvailable && CanAffordTerritory(t)) - 5) more affordable...</p>
                        }
                    </div>
                </div>
                <div>
                    <h4 class="font-bold text-orange-600 mb-2">� Locked Territories</h4>
                    <div class="space-y-1 text-sm max-h-32 overflow-y-auto">
                        @foreach (var territory in availableTerritories.Where(t => t.IsAvailable && !CanAffordTerritory(t)).OrderBy(t => t.ReputationRequired).Take(5))
                        {
                            <div class="flex justify-between items-center">
                                <span>🔐 @territory.CountryName</span>
                                <span class="text-orange-600">@territory.ReputationRequired%</span>
                            </div>
                        }
                        @if (availableTerritories.Count(t => t.IsAvailable && !CanAffordTerritory(t)) > 5)
                        {
                            <p class="text-xs text-gray-500">+ @(availableTerritories.Count(t => t.IsAvailable && !CanAffordTerritory(t)) - 5) more locked...</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Current Status Display -->
        <div class="text-center">
            <div class="pixel-art-card inline-block">
                <p><strong>Current View:</strong> @currentZoom Level</p>
                <p class="text-sm mt-1">Navigation: 🌍 World → 🌎 Continent → 🏞️ Region → 🏛️ Country</p>
                <p class="text-xs mt-2 text-gray-600">Ready to conquer the world through strategic learning!</p>
            </div>
        </div>
    </div>
</div>

@code {
    // Game Configuration
    private readonly Guid playerId = Guid.NewGuid();
    private int playerIncome = 8000;
    private int playerReputation = 45;
    private bool isMobile = false;
    
    // Component State
    private List<TerritoryDto> playerTerritories = new();
    private List<TerritoryDto> availableTerritories = new();
    private TerritoryDto? selectedTerritory;
    private ZoomLevel currentZoom = ZoomLevel.World;

    protected override async Task OnInitializedAsync()
    {
        await InitializeGameData();
        Logger.LogInformation("World Territory Map initialized for player {PlayerId}", playerId);
    }

    private async Task InitializeGameData()
    {
        // Initialize player territories (already owned)
        playerTerritories = new List<TerritoryDto>
        {
            new TerritoryDto(
                Id: Guid.NewGuid(),
                CountryName: "Nepal",
                CountryCode: "NP",
                OfficialLanguages: new List<string> { "Nepali" },
                GdpInBillions: 38,
                Tier: TerritoryTier.Small,
                Cost: 500,
                ReputationRequired: 10,
                MonthlyIncome: 50,
                IsAvailable: false,
                IsOwned: true
            ),
            new TerritoryDto(
                Id: Guid.NewGuid(),
                CountryName: "Portugal",
                CountryCode: "PT",
                OfficialLanguages: new List<string> { "Portuguese" },
                GdpInBillions: 252,
                Tier: TerritoryTier.Medium,
                Cost: 1200,
                ReputationRequired: 25,
                MonthlyIncome: 120,
                IsAvailable: false,
                IsOwned: true
            )
        };

        // Initialize available territories for purchase
        availableTerritories = new List<TerritoryDto>
        {
            // Affordable territories
            new TerritoryDto(
                Id: Guid.NewGuid(),
                CountryName: "Estonia",
                CountryCode: "EE",
                OfficialLanguages: new List<string> { "Estonian" },
                GdpInBillions: 38,
                Tier: TerritoryTier.Small,
                Cost: 800,
                ReputationRequired: 15,
                MonthlyIncome: 80,
                IsAvailable: true,
                IsOwned: false
            ),
            new TerritoryDto(
                Id: Guid.NewGuid(),
                CountryName: "New Zealand",
                CountryCode: "NZ",
                OfficialLanguages: new List<string> { "English", "Maori" },
                GdpInBillions: 249,
                Tier: TerritoryTier.Medium,
                Cost: 2200,
                ReputationRequired: 35,
                MonthlyIncome: 220,
                IsAvailable: true,
                IsOwned: false
            ),
            new TerritoryDto(
                Id: Guid.NewGuid(),
                CountryName: "Belgium",
                CountryCode: "BE",
                OfficialLanguages: new List<string> { "Dutch", "French", "German" },
                GdpInBillions: 594,
                Tier: TerritoryTier.Medium,
                Cost: 3500,
                ReputationRequired: 40,
                MonthlyIncome: 350,
                IsAvailable: true,
                IsOwned: false
            ),
            // Premium territories (locked by reputation)
            new TerritoryDto(
                Id: Guid.NewGuid(),
                CountryName: "United Kingdom",
                CountryCode: "GB",
                OfficialLanguages: new List<string> { "English" },
                GdpInBillions: 3131,
                Tier: TerritoryTier.Major,
                Cost: 15000,
                ReputationRequired: 70,
                MonthlyIncome: 1500,
                IsAvailable: true,
                IsOwned: false
            ),
            new TerritoryDto(
                Id: Guid.NewGuid(),
                CountryName: "Japan",
                CountryCode: "JP",
                OfficialLanguages: new List<string> { "Japanese" },
                GdpInBillions: 4940,
                Tier: TerritoryTier.Major,
                Cost: 25000,
                ReputationRequired: 80,
                MonthlyIncome: 2500,
                IsAvailable: true,
                IsOwned: false
            ),
            new TerritoryDto(
                Id: Guid.NewGuid(),
                CountryName: "United States",
                CountryCode: "US",
                OfficialLanguages: new List<string> { "English" },
                GdpInBillions: 26854,
                Tier: TerritoryTier.Major,
                Cost: 50000,
                ReputationRequired: 90,
                MonthlyIncome: 5000,
                IsAvailable: true,
                IsOwned: false
            )
        };

        await Task.CompletedTask;
    }

    private async Task OnTerritorySelected(TerritoryDto territory)
    {
        selectedTerritory = territory;
        Logger.LogInformation("Territory selected: {CountryName} ({CountryCode}) - Player: {PlayerId}", 
            territory.CountryName, territory.CountryCode, playerId);
        await Task.CompletedTask;
    }

    private async Task OnZoomChanged(ZoomLevel zoomLevel)
    {
        currentZoom = zoomLevel;
        Logger.LogInformation("Zoom level changed to: {ZoomLevel} - Player: {PlayerId}", zoomLevel, playerId);
        await Task.CompletedTask;
    }

    private async Task AcquireTerritory(TerritoryDto territory)
    {
        if (CanAffordTerritory(territory))
        {
            // Process territory acquisition
            playerIncome -= territory.Cost;
            playerReputation += 5; // Gain reputation for successful expansion
            
            // Create new territory with updated ownership status
            var ownedTerritory = territory with { IsOwned = true, IsAvailable = false };
            
            playerTerritories.Add(ownedTerritory);
            availableTerritories.Remove(territory);
            
            Logger.LogInformation("Territory acquired: {CountryName} - New Income: ${Income} - Player: {PlayerId}", 
                territory.CountryName, playerIncome, playerId);
            
            StateHasChanged();
        }
        await Task.CompletedTask;
    }

    private bool CanAffordTerritory(TerritoryDto territory)
    {
        return playerIncome >= territory.Cost && playerReputation >= territory.ReputationRequired;
    }
}