@page "/cost-dashboard"
@using WorldLeaders.Shared.DTOs
@inject IJSRuntime JSRuntime

<PageTitle>World Leaders - Cost Dashboard</PageTitle>

<!-- Mobile-First Responsive Cost Dashboard -->
<div class="cost-dashboard-container p-4 min-h-screen bg-gradient-to-br from-green-50 to-blue-50">
    <!-- Header Section -->
    <div class="dashboard-header text-center mb-6">
        <h1 class="text-3xl md:text-4xl font-bold text-green-800 mb-2 pixel-shadow">üí∞ Cost Dashboard</h1>
        <p class="text-sm md:text-base text-gray-600">Track your learning progress costs and efficiency</p>
    </div>

    @if (isLoading)
    {
        <!-- Mobile-Optimized Loading State -->
        <div class="loading-container text-center py-8">
            <div class="retro-loading-animation mx-auto mb-4">
                <div class="pixel-loading-bars flex justify-center space-x-2">
                    <div class="loading-bar w-3 h-8 bg-green-500 animate-pulse"></div>
                    <div class="loading-bar w-3 h-8 bg-green-400 animate-pulse" style="animation-delay: 0.2s"></div>
                    <div class="loading-bar w-3 h-8 bg-green-300 animate-pulse" style="animation-delay: 0.4s"></div>
                </div>
            </div>
            <p class="text-gray-600">Loading dashboard...</p>
        </div>
    }
    else
    {
        <!-- Main Dashboard Content -->
        <div class="dashboard-content space-y-6 max-w-7xl mx-auto">
            
            <!-- Cost Summary Cards - Mobile Stack, Desktop Grid -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6">
                
                <!-- Total Cost Card -->
                <div class="cost-card p-4 md:p-6 bg-white rounded-lg shadow-lg border-l-4 border-blue-500 hover:shadow-xl transition-shadow duration-300">
                    <div class="card-header flex items-center mb-3">
                        <span class="text-2xl mr-3">üí∑</span>
                        <h3 class="text-lg md:text-xl font-bold text-blue-800">Total Cost</h3>
                    </div>
                    <div class="card-content">
                        <p class="cost-amount text-2xl md:text-3xl font-bold text-blue-900 mb-2">
                            ¬£@(costSummary?.TotalCostGBP.ToString("F2") ?? "0.00")
                        </p>
                        <p class="cost-description text-sm text-blue-600">
                            @if (costSummary?.IsOverDailyLimit == true)
                            {
                                <span class="text-red-600 font-semibold">‚ö†Ô∏è Over daily limit</span>
                            }
                            else
                            {
                                <span class="text-green-600">‚úÖ Within budget</span>
                            }
                        </p>
                    </div>
                </div>

                <!-- Remaining Budget Card -->
                <div class="cost-card p-4 md:p-6 bg-white rounded-lg shadow-lg border-l-4 border-green-500 hover:shadow-xl transition-shadow duration-300">
                    <div class="card-header flex items-center mb-3">
                        <span class="text-2xl mr-3">üí∞</span>
                        <h3 class="text-lg md:text-xl font-bold text-green-800">Remaining Budget</h3>
                    </div>
                    <div class="card-content">
                        <p class="cost-amount text-2xl md:text-3xl font-bold text-green-900 mb-2">
                            ¬£@(costSummary?.RemainingBudgetGBP.ToString("F2") ?? "0.00")
                        </p>
                        <p class="cost-description text-sm text-green-600">Available today</p>
                    </div>
                </div>

                <!-- Learning Efficiency Card -->
                <div class="cost-card p-4 md:p-6 bg-white rounded-lg shadow-lg border-l-4 border-purple-500 hover:shadow-xl transition-shadow duration-300 md:col-span-2 lg:col-span-1">
                    <div class="card-header flex items-center mb-3">
                        <span class="text-2xl mr-3">üìö</span>
                        <h3 class="text-lg md:text-xl font-bold text-purple-800">Learning Efficiency</h3>
                    </div>
                    <div class="card-content">
                        <p class="efficiency-score text-2xl md:text-3xl font-bold text-purple-900 mb-2">
                            @(costSummary?.AverageEducationalScore.ToString("F0") ?? "0")%
                        </p>
                        <p class="efficiency-description text-sm text-purple-600">
                            @(costSummary?.LearningObjectivesAchieved ?? 0) objectives achieved
                        </p>
                    </div>
                </div>
            </div>

            <!-- Service Breakdown Section -->
            @if (costSummary?.ServiceBreakdown?.Any() == true)
            {
                <div class="service-breakdown bg-white rounded-lg shadow-lg p-4 md:p-6">
                    <h3 class="text-xl md:text-2xl font-bold mb-4 text-center md:text-left text-gray-800">üîß Service Breakdown</h3>
                    
                    <!-- Mobile: Stack vertically, Desktop: Grid layout -->
                    <div class="services-grid space-y-3 md:space-y-0 md:grid md:grid-cols-2 lg:grid-cols-3 md:gap-4">
                        @foreach (var service in costSummary.ServiceBreakdown.Take(6))
                        {
                            <div class="service-item flex justify-between items-center p-3 bg-gray-50 rounded-lg border hover:bg-gray-100 transition-colors duration-200">
                                <div class="service-info flex-1">
                                    <h4 class="font-semibold text-gray-800 text-sm md:text-base">@service.Key</h4>
                                    <p class="text-xs md:text-sm text-gray-600">@service.Value.CallCount calls</p>
                                </div>
                                <div class="service-cost text-right">
                                    <p class="font-bold text-gray-900 text-sm md:text-base">¬£@service.Value.CostGBP.ToString("F2")</p>
                                    <p class="text-xs text-gray-500">@service.Value.EducationalValueScore.ToString("F0")% efficiency</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Learning Progress Section -->
            <div class="learning-progress bg-white rounded-lg shadow-lg p-4 md:p-6">
                <h3 class="text-xl md:text-2xl font-bold mb-4 text-center md:text-left text-gray-800">üìñ Learning Progress</h3>
                
                <div class="progress-grid grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6">
                    <!-- Active Learning Time -->
                    <div class="progress-item p-4 bg-gradient-to-r from-green-100 to-blue-100 rounded-lg">
                        <div class="flex items-center mb-2">
                            <span class="text-xl mr-2">‚è±Ô∏è</span>
                            <h4 class="font-bold text-gray-800">Active Learning Time</h4>
                        </div>
                        <p class="text-lg md:text-xl font-bold text-gray-900">
                            @(costSummary?.ActiveLearningTime.ToString(@"hh\:mm") ?? "00:00")
                        </p>
                    </div>

                    <!-- Learning Objectives -->
                    <div class="progress-item p-4 bg-gradient-to-r from-purple-100 to-pink-100 rounded-lg">
                        <div class="flex items-center mb-2">
                            <span class="text-xl mr-2">üéØ</span>
                            <h4 class="font-bold text-gray-800">Learning Objectives</h4>
                        </div>
                        <p class="text-lg md:text-xl font-bold text-gray-900">
                            @(costSummary?.LearningObjectivesAchieved ?? 0) achieved
                        </p>
                    </div>
                </div>
            </div>

            <!-- Tomorrow's Forecast -->
            @if (costSummary?.TomorrowForecast != null)
            {
                <div class="forecast bg-white rounded-lg shadow-lg p-4 md:p-6">
                    <h3 class="text-xl md:text-2xl font-bold mb-4 text-center md:text-left text-gray-800">üîÆ Tomorrow's Forecast</h3>
                    
                    <div class="forecast-content grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6">
                        <div class="forecast-item p-4 bg-gradient-to-r from-yellow-100 to-orange-100 rounded-lg">
                            <div class="flex items-center mb-2">
                                <span class="text-xl mr-2">üí∑</span>
                                <h4 class="font-bold text-gray-800">Predicted Cost</h4>
                            </div>
                            <p class="text-lg md:text-xl font-bold text-gray-900">
                                ¬£@costSummary.TomorrowForecast.PredictedCostGBP.ToString("F2")
                            </p>
                        </div>

                        <div class="forecast-item p-4 bg-gradient-to-r from-blue-100 to-purple-100 rounded-lg">
                            <div class="flex items-center mb-2">
                                <span class="text-xl mr-2">üìä</span>
                                <h4 class="font-bold text-gray-800">Educational Score</h4>
                            </div>
                            <p class="text-lg md:text-xl font-bold text-gray-900">
                                @costSummary.TomorrowForecast.PredictedEducationalScore.ToString("F0")%
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private bool isLoading = true;
    private EnhancedCostSummaryDto? costSummary;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Simulate loading
            await Task.Delay(1000);
            
            // Load cost data (mock data for now)
            costSummary = new EnhancedCostSummaryDto(
                UserId: Guid.NewGuid(),
                Date: DateTime.UtcNow,
                TotalCostGBP: 0.05m,
                IsOverDailyLimit: false,
                RemainingBudgetGBP: 0.03m)
            {
                ServiceBreakdown = new Dictionary<string, CostServiceBreakdown>
                {
                    ["OpenAI GPT-4"] = new CostServiceBreakdown("OpenAI GPT-4", 0.02m, 15, 0.0013m),
                    ["Azure Speech"] = new CostServiceBreakdown("Azure Speech", 0.015m, 8, 0.0019m),
                    ["Azure Cognitive"] = new CostServiceBreakdown("Azure Cognitive", 0.01m, 5, 0.002m),
                    ["World Bank API"] = new CostServiceBreakdown("World Bank API", 0.005m, 3, 0.0017m)
                },
                AverageEducationalScore = 87m,
                LearningObjectivesAchieved = 3,
                ActiveLearningTime = TimeSpan.FromMinutes(45),
                TomorrowForecast = new CostForecastData(
                    UserId: Guid.NewGuid(),
                    ForecastDate: DateTime.UtcNow.AddDays(1),
                    PredictedCostGBP: 0.06m,
                    ConfidenceScore: 0.85m,
                    TrendFactors: new List<string> { "Increased engagement", "Weekend usage" })
                {
                    PredictedEducationalScore = 89m
                }
            };
        }
        catch (Exception ex)
        {
            // Handle error gracefully
            Console.WriteLine($"Error loading cost dashboard: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}
